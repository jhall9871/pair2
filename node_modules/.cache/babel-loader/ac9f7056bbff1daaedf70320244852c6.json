{"ast":null,"code":"var _jsxFileName = \"/Users/jameshall 1/Desktop/seir-526/project-2-react/pair/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Welcome from \"./Components/Welcome\";\nimport ModeSelect from \"./Components/ModeSelect\";\nimport MenuWine from \"./Components/MenuWine\";\nimport MenuFood from \"./Components/MenuFood\";\nimport RecipeRec from \"./Components/RecipeRec\";\nimport wineTypes from \"./wineTypeData\";\nimport foodTypes from \"./foodTypeData\";\nimport \"./App.css\";\n\nfunction App() {\n  // const [selectedWine, setSelectedWine] = useState(\"\"); //the wine the user selects\n  const [recipeUrl, setRecipeUrl] = useState(\"\");\n  const [recipeRec, setRecipeRec] = useState(\"\"); //the recipe(s) we'll recommend\n  // const [pairingFactor1, setPairingFactor1] = useState(\"\");\n  // const [pairingFactor2, setPairingFactor2] = useState(\"\");\n  // const handleWineSelect = (event) => {\n  //   setSelectedWine(event.target.value);\n  // };\n  // const handleShowMeClick = () => {\n  //   console.log(\"showme click!\")\n  //   console.log(\"recipeUrl = \" + recipeUrl)\n  //   //actually make the api call\n  //   const makeApiCall = async () => {\n  //     console.log(\"Making API Call!!! No more than 5 per hour!\")\n  //     const response = await fetch(recipeUrl);\n  //     const json = await response.json();\n  //     setRecipeRec(json);\n  //     console.log(recipeRec)\n  //   };\n  //   makeApiCall(); //exceeded my limit! wait to re-establish this.\n  // };\n  // //listen for a change in selectedWine, set the search url.\n  // useEffect(() => {\n  //   console.log(\"useEffect!\")\n  //   //if a wine has been selected,\n  //   if (selectedWine) {\n  //     //get wine pairing array\n  //     let pairingArray = wineTypes[selectedWine].pairingArray;\n  //     //get array of food categories\n  //     let foodTypeArray = Object.keys(foodTypes);\n  //     //create array of arrays of food subcategories\n  //     let foodSubtypeArray = [];\n  //     foodTypeArray.forEach((type) => {\n  //       foodSubtypeArray.push(Object.keys(foodTypes[type]));\n  //     });\n  //     //flatten the array of arrays into one big array\n  //     let flatArray = foodSubtypeArray.flat();\n  //     // console.log(\"foodTypeArray = \" + foodTypeArray);\n  //     // console.log(flatArray);\n  //     //create an array with only foods with a value of \"2\" from pairing array (great pairs)\n  //     //for now, we're being more general, so \"pork\" rather than \"roast, tenderloin\" etc.\n  //     let masterArray = [];\n  //     for (let i = 0; i < flatArray.length; i++) {\n  //       if (pairingArray[i] === 2) {\n  //         masterArray.push(flatArray[i]);\n  //       }\n  //     }\n  //     // console.log(masterArray)\n  //     // select two random indices from the master array\n  //     let num1 = Math.floor(Math.random() * (masterArray.length / 2));\n  //     let num2 = Math.floor((Math.random() * (masterArray.length / 2)) + (masterArray.length / 2));\n  //     console.log(num1, num2);\n  //     // TO DO: sparkling and rose only have one \"2\" apiece!\n  //     // make our selections based on these indices\n  //     let localPairFactor1 = masterArray[num1];\n  //     let localPairFactor2 = masterArray[num2];\n  //     console.log(\"local factor 1 = \" + localPairFactor1 + \" local factor 2 = \" + localPairFactor2)\n  //     setRecipeUrl(`https://api.edamam.com/search?q=${localPairFactor1}%20AND%20${localPairFactor2}&app_id=d9740b8f&app_key=ef3b8ea5fd0b0bffed8b9bc13e135c91`);\n  //     // console.log(\"recipeURL = \" + recipeUrl);\n  //     setPairingFactor1(localPairFactor1);\n  //     setPairingFactor2(localPairFactor2);\n  //   }\n  // }, [selectedWine]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Welcome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/modeselect\",\n    component: ModeSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/menuwine\",\n    component: MenuWine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/reciperec\",\n    render: routerProps => /*#__PURE__*/React.createElement(RecipeRec, Object.assign({\n      recipeRec: recipeRec\n    }, routerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/menufood\",\n    component: MenuFood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jameshall 1/Desktop/seir-526/project-2-react/pair/src/App.js"],"names":["React","useState","useEffect","Route","Switch","Welcome","ModeSelect","MenuWine","MenuFood","RecipeRec","wineTypes","foodTypes","App","recipeUrl","setRecipeUrl","recipeRec","setRecipeRec","routerProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C,CAHa,CAGmC;AAChD;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEI,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,aAAZ;AAA0B,IAAA,SAAS,EAAEC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,MAAM,EAAGU,WAAD,iBACN,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEF;AAAtB,OAAqCE,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAUE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAET,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CAFF,CADF;AAmBD;;AAED,eAAeI,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Welcome from \"./Components/Welcome\";\nimport ModeSelect from \"./Components/ModeSelect\";\nimport MenuWine from \"./Components/MenuWine\";\nimport MenuFood from \"./Components/MenuFood\";\nimport RecipeRec from \"./Components/RecipeRec\";\nimport wineTypes from \"./wineTypeData\";\nimport foodTypes from \"./foodTypeData\";\nimport \"./App.css\";\n\nfunction App() {\n  // const [selectedWine, setSelectedWine] = useState(\"\"); //the wine the user selects\n  const [recipeUrl, setRecipeUrl] = useState(\"\");\n  const [recipeRec, setRecipeRec] = useState(\"\"); //the recipe(s) we'll recommend\n  // const [pairingFactor1, setPairingFactor1] = useState(\"\");\n  // const [pairingFactor2, setPairingFactor2] = useState(\"\");\n\n  // const handleWineSelect = (event) => {\n  //   setSelectedWine(event.target.value);\n  // };\n\n  // const handleShowMeClick = () => {\n  //   console.log(\"showme click!\")\n  //   console.log(\"recipeUrl = \" + recipeUrl)\n  //   //actually make the api call\n  //   const makeApiCall = async () => {\n  //     console.log(\"Making API Call!!! No more than 5 per hour!\")\n  //     const response = await fetch(recipeUrl);\n  //     const json = await response.json();\n  //     setRecipeRec(json);\n  //     console.log(recipeRec)\n  //   };\n  //   makeApiCall(); //exceeded my limit! wait to re-establish this.\n  // };\n\n  // //listen for a change in selectedWine, set the search url.\n  // useEffect(() => {\n  //   console.log(\"useEffect!\")\n  //   //if a wine has been selected,\n  //   if (selectedWine) {\n  //     //get wine pairing array\n  //     let pairingArray = wineTypes[selectedWine].pairingArray;\n  //     //get array of food categories\n  //     let foodTypeArray = Object.keys(foodTypes);\n  //     //create array of arrays of food subcategories\n  //     let foodSubtypeArray = [];\n  //     foodTypeArray.forEach((type) => {\n  //       foodSubtypeArray.push(Object.keys(foodTypes[type]));\n  //     });\n  //     //flatten the array of arrays into one big array\n  //     let flatArray = foodSubtypeArray.flat();\n  //     // console.log(\"foodTypeArray = \" + foodTypeArray);\n  //     // console.log(flatArray);\n  //     //create an array with only foods with a value of \"2\" from pairing array (great pairs)\n  //     //for now, we're being more general, so \"pork\" rather than \"roast, tenderloin\" etc.\n  //     let masterArray = [];\n  //     for (let i = 0; i < flatArray.length; i++) {\n  //       if (pairingArray[i] === 2) {\n  //         masterArray.push(flatArray[i]);\n  //       }\n  //     }\n  //     // console.log(masterArray)\n  //     // select two random indices from the master array\n  //     let num1 = Math.floor(Math.random() * (masterArray.length / 2));\n  //     let num2 = Math.floor((Math.random() * (masterArray.length / 2)) + (masterArray.length / 2));\n\n  //     console.log(num1, num2);\n  //     // TO DO: sparkling and rose only have one \"2\" apiece!\n\n  //     // make our selections based on these indices\n\n  //     let localPairFactor1 = masterArray[num1];\n  //     let localPairFactor2 = masterArray[num2];\n\n  //     console.log(\"local factor 1 = \" + localPairFactor1 + \" local factor 2 = \" + localPairFactor2)\n\n  //     setRecipeUrl(`https://api.edamam.com/search?q=${localPairFactor1}%20AND%20${localPairFactor2}&app_id=d9740b8f&app_key=ef3b8ea5fd0b0bffed8b9bc13e135c91`);\n  //     // console.log(\"recipeURL = \" + recipeUrl);\n  //     setPairingFactor1(localPairFactor1);\n  //     setPairingFactor2(localPairFactor2);\n  //   }\n  // }, [selectedWine]);\n\n  return (\n    <div className=\"App\">\n      <nav></nav>\n      <div className=\"main\">\n        <Switch>\n          <Route exact path=\"/\" component={Welcome} />\n          <Route path=\"/modeselect\" component={ModeSelect} />\n          <Route path=\"/menuwine\" component={MenuWine} />\n          <Route\n            path=\"/reciperec\"\n            render={(routerProps) => (\n              <RecipeRec recipeRec={recipeRec} {...routerProps} />\n            )}\n          />\n          <Route path=\"/menufood\" component={MenuFood} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}