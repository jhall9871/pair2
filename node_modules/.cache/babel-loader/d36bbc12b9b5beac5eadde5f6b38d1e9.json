{"ast":null,"code":"var _jsxFileName = \"/Users/jameshall 1/Desktop/seir-526/pair/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Welcome from \"./Components/Welcome\";\nimport ModeSelect from \"./Components/ModeSelect\";\nimport MenuWine from \"./Components/MenuWine\";\nimport MenuFood from \"./Components/MenuFood\";\nimport RecipeRec from \"./Components/RecipeRec\";\nimport WineRec from \"./Components/WineRec\";\nimport wineTypes from \"./wineTypeData\";\nimport foodTypes from \"./foodTypeData\";\nimport \"./App.css\";\n\nfunction App() {\n  const [selectedWine, setSelectedWine] = useState(\"\"); //the wine the user selects\n\n  const [selectionInfo, setSelectionInfo] = useState({}); //the whole object corresponding to that wine\n\n  const [recipeUrl, setRecipeUrl] = useState(\"\");\n  const [recipeRec, setRecipeRec] = useState(\"\"); //the recipe(s) we'll recommend\n\n  const [pairingFactor1, setPairingFactor1] = useState(\"\");\n  const [pairingFactor2, setPairingFactor2] = useState(\"\");\n  const [winner, setWinner] = useState({}); //When the user selects a wine (in MenuWine), update SelectedWine (its name, a string) and SelectionInfo (an object with all its info).\n\n  const handleWineSelect = event => {\n    setSelectedWine(event.target.dataset.id);\n    setSelectionInfo(wineTypes[event.target.dataset.id]);\n  }; //When the user clicks \"Show mea a recipe!\" (in MenuWine), \n\n\n  const handleShowMeClick = () => {\n    console.log(\"showme click!\");\n    console.log(\"recipeUrl = \" + recipeUrl); //actually make the api call\n\n    const makeApiCall = async () => {\n      console.log(\"Making API Call!!! No more than 5 per minute!\");\n      const response = await fetch(recipeUrl);\n      const json = await response.json();\n      setRecipeRec(json);\n      console.log(recipeRec);\n    };\n\n    makeApiCall(); //no more than 5x per minute!\n  }; //listen for a change in selectedWine, set the search url.\n\n\n  useEffect(() => {\n    //if a wine has been selected,\n    if (selectedWine) {\n      //get wine pairing array\n      let pairingArray = wineTypes[selectedWine].pairingArray; //get array of food categories\n\n      let foodTypeArray = Object.keys(foodTypes); //create array of arrays of food subcategories\n\n      let foodSubtypeArray = [];\n      foodTypeArray.forEach(type => {\n        foodSubtypeArray.push(Object.keys(foodTypes[type]));\n      }); //flatten the array of arrays into one big array\n\n      let flatArray = foodSubtypeArray.flat(); // console.log(\"foodTypeArray = \" + foodTypeArray);\n      //create an array with only foods with a value of \"2\" from pairing array (great pairs)\n      //for now, we're being more general, so \"pork\" rather than \"roast, tenderloin\" etc.\n\n      let masterArray = []; //sparkling wines only have one 2 in their array, so in their case, we'll allow 1s.\n\n      if (selectedWine === \"sparkling\") {\n        for (let i = 0; i < flatArray.length; i++) {\n          if (pairingArray[i] >= 1) {\n            masterArray.push(flatArray[i]);\n          }\n        } //otherwise it's gotta be 2s.\n\n      } else {\n        for (let i = 0; i < flatArray.length; i++) {\n          if (pairingArray[i] === 2) {\n            masterArray.push(flatArray[i]);\n          }\n        }\n      } // select two random indices from the master array\n\n\n      let num1 = Math.floor(Math.random() * (masterArray.length / 2));\n      let num2 = Math.floor(Math.random() * (masterArray.length / 2) + masterArray.length / 2);\n      console.log(\"num 1 = \" + num1 + \" num 2 = \" + num2);\n      console.log(masterArray); // TO DO: sparkling and rose only have one \"2\" apiece!\n      // make our selections based on these indices\n\n      let localPairFactor1 = masterArray[num1];\n      let localPairFactor2 = masterArray[num2]; // console.log(\"local factor 1 = \" + localPairFactor1 + \" local factor 2 = \" + localPairFactor2)\n\n      setRecipeUrl(`https://api.edamam.com/search?q=${localPairFactor1}%20AND%20${localPairFactor2}&app_id=d9740b8f&app_key=ef3b8ea5fd0b0bffed8b9bc13e135c91`); // console.log(\"recipeURL = \" + recipeUrl);\n\n      setPairingFactor1(localPairFactor1);\n      setPairingFactor2(localPairFactor2);\n    }\n  }, [selectedWine]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Welcome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/modeselect\",\n    component: ModeSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/menuwine\",\n    render: routerProps => /*#__PURE__*/React.createElement(MenuWine, Object.assign({\n      handleWineSelect: handleWineSelect,\n      handleShowMeClick: handleShowMeClick,\n      selectionInfo: selectionInfo\n    }, routerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/reciperec\",\n    render: routerProps => /*#__PURE__*/React.createElement(RecipeRec, Object.assign({\n      recipeRec: recipeRec,\n      factor1: pairingFactor1,\n      factor2: pairingFactor2,\n      selectionInfo: selectionInfo\n    }, routerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/winerec\",\n    render: routerProps => /*#__PURE__*/React.createElement(WineRec, Object.assign({\n      winner: winner\n    }, routerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/menufood\",\n    render: routerProps => /*#__PURE__*/React.createElement(MenuFood, Object.assign({\n      setWinner: setWinner\n    }, routerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jameshall 1/Desktop/seir-526/pair/src/App.js"],"names":["React","useState","useEffect","Route","Switch","Welcome","ModeSelect","MenuWine","MenuFood","RecipeRec","WineRec","wineTypes","foodTypes","App","selectedWine","setSelectedWine","selectionInfo","setSelectionInfo","recipeUrl","setRecipeUrl","recipeRec","setRecipeRec","pairingFactor1","setPairingFactor1","pairingFactor2","setPairingFactor2","winner","setWinner","handleWineSelect","event","target","dataset","id","handleShowMeClick","console","log","makeApiCall","response","fetch","json","pairingArray","foodTypeArray","Object","keys","foodSubtypeArray","forEach","type","push","flatArray","flat","masterArray","i","length","num1","Math","floor","random","num2","localPairFactor1","localPairFactor2","routerProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Welcome from \"./Components/Welcome\";\nimport ModeSelect from \"./Components/ModeSelect\";\nimport MenuWine from \"./Components/MenuWine\";\nimport MenuFood from \"./Components/MenuFood\";\nimport RecipeRec from \"./Components/RecipeRec\";\nimport WineRec from \"./Components/WineRec\";\nimport wineTypes from \"./wineTypeData\";\nimport foodTypes from \"./foodTypeData\";\nimport \"./App.css\";\n\nfunction App() {\n  const [selectedWine, setSelectedWine] = useState(\"\"); //the wine the user selects\n  const [selectionInfo, setSelectionInfo] = useState({}); //the whole object corresponding to that wine\n  const [recipeUrl, setRecipeUrl] = useState(\"\");\n  const [recipeRec, setRecipeRec] = useState(\"\"); //the recipe(s) we'll recommend\n  const [pairingFactor1, setPairingFactor1] = useState(\"\");\n  const [pairingFactor2, setPairingFactor2] = useState(\"\");\n  const [winner, setWinner] = useState({});\n\n  //When the user selects a wine (in MenuWine), update SelectedWine (its name, a string) and SelectionInfo (an object with all its info).\n  const handleWineSelect = (event) => {\n    setSelectedWine(event.target.dataset.id);\n    setSelectionInfo(wineTypes[event.target.dataset.id]);\n  };\n\n  //When the user clicks \"Show mea a recipe!\" (in MenuWine), \n  const handleShowMeClick = () => {\n    console.log(\"showme click!\");\n    console.log(\"recipeUrl = \" + recipeUrl);\n    //actually make the api call\n    const makeApiCall = async () => {\n      console.log(\"Making API Call!!! No more than 5 per minute!\");\n      const response = await fetch(recipeUrl);\n      const json = await response.json();\n      setRecipeRec(json);\n      console.log(recipeRec);\n    };\n    makeApiCall(); //no more than 5x per minute!\n  };\n\n  //listen for a change in selectedWine, set the search url.\n  useEffect(() => {\n    //if a wine has been selected,\n    if (selectedWine) {\n      //get wine pairing array\n      let pairingArray = wineTypes[selectedWine].pairingArray;\n      //get array of food categories\n      let foodTypeArray = Object.keys(foodTypes);\n      //create array of arrays of food subcategories\n      let foodSubtypeArray = [];\n      foodTypeArray.forEach((type) => {\n        foodSubtypeArray.push(Object.keys(foodTypes[type]));\n      });\n      //flatten the array of arrays into one big array\n      let flatArray = foodSubtypeArray.flat();\n      // console.log(\"foodTypeArray = \" + foodTypeArray);\n      //create an array with only foods with a value of \"2\" from pairing array (great pairs)\n      //for now, we're being more general, so \"pork\" rather than \"roast, tenderloin\" etc.\n      let masterArray = [];\n      //sparkling wines only have one 2 in their array, so in their case, we'll allow 1s.\n      if (selectedWine === \"sparkling\") {\n        for (let i = 0; i < flatArray.length; i++) {\n          if (pairingArray[i] >= 1) {\n            masterArray.push(flatArray[i]);\n          }\n        }\n        //otherwise it's gotta be 2s.\n      } else {\n        for (let i = 0; i < flatArray.length; i++) {\n          if (pairingArray[i] === 2) {\n            masterArray.push(flatArray[i]);\n          }\n        }\n      }\n      // select two random indices from the master array\n      let num1 = Math.floor(Math.random() * (masterArray.length / 2));\n      let num2 = Math.floor(\n        Math.random() * (masterArray.length / 2) + masterArray.length / 2\n      );\n\n      console.log(\"num 1 = \" + num1 + \" num 2 = \" + num2);\n      console.log(masterArray);\n      // TO DO: sparkling and rose only have one \"2\" apiece!\n\n      // make our selections based on these indices\n\n      let localPairFactor1 = masterArray[num1];\n      let localPairFactor2 = masterArray[num2];\n\n      // console.log(\"local factor 1 = \" + localPairFactor1 + \" local factor 2 = \" + localPairFactor2)\n\n      setRecipeUrl(\n        `https://api.edamam.com/search?q=${localPairFactor1}%20AND%20${localPairFactor2}&app_id=d9740b8f&app_key=ef3b8ea5fd0b0bffed8b9bc13e135c91`\n      );\n      // console.log(\"recipeURL = \" + recipeUrl);\n      setPairingFactor1(localPairFactor1);\n      setPairingFactor2(localPairFactor2);\n    }\n  }, [selectedWine]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <Switch>\n          <Route exact path=\"/\" component={Welcome} />\n          <Route path=\"/modeselect\" component={ModeSelect} />\n          <Route\n            path=\"/menuwine\"\n            render={(routerProps) => (\n              <MenuWine\n                handleWineSelect={handleWineSelect}\n                handleShowMeClick={handleShowMeClick}\n                selectionInfo={selectionInfo}\n                {...routerProps}\n              />\n            )}\n          />\n          <Route\n            path=\"/reciperec\"\n            render={(routerProps) => (\n              <RecipeRec\n                recipeRec={recipeRec}\n                factor1={pairingFactor1}\n                factor2={pairingFactor2}\n                selectionInfo={selectionInfo}\n                {...routerProps}\n              />\n            )}\n          />\n          <Route\n            path=\"/winerec\"\n            render={(routerProps) => (\n              <WineRec winner={winner} {...routerProps} />\n            )}\n          />\n          <Route\n            path=\"/menufood\"\n            render={(routerProps) => (\n              <MenuFood setWinner={setWinner} {...routerProps} />\n            )}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}