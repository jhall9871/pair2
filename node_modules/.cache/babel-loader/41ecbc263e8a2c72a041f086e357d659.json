{"ast":null,"code":"var _jsxFileName = \"/Users/jameshall 1/Desktop/seir-526/pair/src/Components/MenuFood.js\";\nimport React, { useState } from \"react\";\nimport foodTypes from \"../foodTypeData2\";\nimport wineTypeData from \"../wineTypeData\";\n\nconst MenuFood = () => {\n  const [pairingFactors, setPairingFactors] = useState([]);\n  const [winner, setWinner] = useState({});\n  const wineTypeArray = ['boldred', 'mediumred', 'lightred', 'rose', 'richwhite', 'lightwhite', 'sparkling', 'sweet', 'dessert'];\n\n  const handleSelect = event => {\n    //value always returns a string, like \"meat1\"\n    if (pairingFactors.length === 4) {\n      alert(\"That's the max number of thingies\");\n    } else {\n      let arr = event.target.value.split(\" \");\n      let type = arr[0];\n      let subType = arr[1]; // console.log(\"type \" + type + \" subType \" + subType);//works\n      // console.log(foodTypes[type][subType]);//works\n\n      setPairingFactors([...pairingFactors, foodTypes[type][subType]]);\n    }\n  };\n\n  const handlePairClick = () => {\n    //create empty result array\n    let result = [0, 0, 0, 0, 0, 0, 0, 0, 0]; //loop through each pairing factor\n\n    for (let i = 0; i < pairingFactors.length; i++) {\n      //loop through pairing factor's pairingarray\n      for (let j = 0; j < pairingFactors[i].pairingArray.length; j++) {\n        result[j] += pairingFactors[i].pairingArray[j];\n      }\n    }\n\n    let winningIndex = result.indexOf(Math.max(...result));\n    setWinner(wineTypeData[wineTypeArray[winningIndex]]);\n  }; // {\n  //   Object.values(foodTypes.meat).map((item, index) => console.log(item));\n  // }\n\n\n  console.log(pairingFactors);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-food\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Choose up to 4 ingredients / prep methods.\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    selected: true,\n    disabled: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Choose:\"), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Meat\",\n    id: \"meat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.meat).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `meat ${Object.keys(foodTypes.meat)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Dairy\",\n    id: \"dairy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.dairy).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `dairy ${Object.keys(foodTypes.dairy)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Vegetable\",\n    id: \"vegetable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.vegetable).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `vegetable ${Object.keys(foodTypes.vegetable)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Herb & Spice\",\n    id: \"herbandspice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.herbandspice).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `herbandspice ${Object.keys(foodTypes.herbandspice)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Starch\",\n    id: \"starch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.starch).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `starch ${Object.keys(foodTypes.starch)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Sweet\",\n    id: \"sweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.sweet).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `sweet ${Object.keys(foodTypes.sweet)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Preparation Method\",\n    id: \"preparation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.preparation).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `preparation ${Object.keys(foodTypes.preparation)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, item.name))))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Selected factors:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"food-factors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, pairingFactors[0] ? pairingFactors.map((object, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 68\n    }\n  }, object.name)) : \"Please select something.\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePairClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Pair!\"), winner.name ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 22\n    }\n  }, \"Try a \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"emphasis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 31\n    }\n  }, winner.name.toLowerCase(), \" wine\"), \" such as a \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 108\n    }\n  }), winner.subtypes.slice(0, -1).join(\", \") + \", or \" + winner.subtypes.slice(-1)) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 200\n    }\n  }, \"No result yet.\"));\n};\n\nexport default MenuFood;","map":{"version":3,"sources":["/Users/jameshall 1/Desktop/seir-526/pair/src/Components/MenuFood.js"],"names":["React","useState","foodTypes","wineTypeData","MenuFood","pairingFactors","setPairingFactors","winner","setWinner","wineTypeArray","handleSelect","event","length","alert","arr","target","value","split","type","subType","handlePairClick","result","i","j","pairingArray","winningIndex","indexOf","Math","max","console","log","Object","values","meat","map","item","index","keys","name","dairy","vegetable","herbandspice","starch","sweet","preparation","object","toLowerCase","subtypes","slice","join"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport foodTypes from \"../foodTypeData2\";\nimport wineTypeData from \"../wineTypeData\";\n\nconst MenuFood = () => {\n  const [pairingFactors, setPairingFactors] = useState([]);\n  const [winner, setWinner] = useState({});\n  const wineTypeArray = ['boldred', 'mediumred', 'lightred', 'rose', 'richwhite', 'lightwhite', 'sparkling', 'sweet', 'dessert']\n\n  const handleSelect = (event) => {\n    //value always returns a string, like \"meat1\"\n    if (pairingFactors.length === 4) {\n      alert(\"That's the max number of thingies\")\n    } else {\n      let arr = event.target.value.split(\" \");\n      let type = arr[0];\n      let subType = arr[1];\n      // console.log(\"type \" + type + \" subType \" + subType);//works\n      // console.log(foodTypes[type][subType]);//works\n      setPairingFactors([...pairingFactors, foodTypes[type][subType]]);\n    }\n  };\n\n  const handlePairClick = () => {\n      //create empty result array\n    let result = [0,0,0,0,0,0,0,0,0];\n    //loop through each pairing factor\n    for (let i = 0; i < pairingFactors.length; i++) {\n      //loop through pairing factor's pairingarray\n      for (let j = 0; j < pairingFactors[i].pairingArray.length; j++) {\n        result[j] += pairingFactors[i].pairingArray[j];\n      }\n    }\n    let winningIndex = result.indexOf(Math.max(...result));\n    setWinner(wineTypeData[wineTypeArray[winningIndex]]);\n  }\n\n  // {\n  //   Object.values(foodTypes.meat).map((item, index) => console.log(item));\n  // }\n\nconsole.log(pairingFactors)\n\n  return (\n    <div className=\"menu-food\">\n      <h3>Choose up to 4 ingredients / prep methods.</h3>\n      <form>\n        <select onChange={handleSelect}>\n          <option value=\"\" selected disabled hidden>Choose:</option>\n          <optgroup label=\"Meat\" id=\"meat\">\n            {Object.values(foodTypes.meat).map((item, index) => (\n              <option key={index} value={`meat ${Object.keys(foodTypes.meat)[index]}`}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Dairy\" id=\"dairy\">\n            {Object.values(foodTypes.dairy).map((item, index) => (\n              <option key={index} value={`dairy ${Object.keys(foodTypes.dairy)[index]}`}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Vegetable\" id=\"vegetable\">\n            {Object.values(foodTypes.vegetable).map((item, index) => (\n              <option key={index} value={`vegetable ${Object.keys(foodTypes.vegetable)[index]}`}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Herb & Spice\" id=\"herbandspice\">\n            {Object.values(foodTypes.herbandspice).map((item, index) => (\n              <option key={index} value={`herbandspice ${Object.keys(foodTypes.herbandspice)[index]}`}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Starch\" id=\"starch\">\n            {Object.values(foodTypes.starch).map((item, index) => (\n              <option key={index} value={`starch ${Object.keys(foodTypes.starch)[index]}`}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Sweet\" id=\"sweet\">\n            {Object.values(foodTypes.sweet).map((item, index) => (\n              <option key={index} value={`sweet ${Object.keys(foodTypes.sweet)[index]}`}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Preparation Method\" id=\"preparation\">\n            {Object.values(foodTypes.preparation).map((item, index) => (\n              <option key={index} value={`preparation ${Object.keys(foodTypes.preparation)[index]}`}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n        </select>\n      </form>\n      <h3>Selected factors:</h3>\n      <ul className=\"food-factors\">\n        {pairingFactors[0] ? pairingFactors.map((object, index) => <li key={index}>{object.name}</li>) : \"Please select something.\"}\n      </ul>\n      <button onClick={handlePairClick}>Pair!</button>\n      {winner.name ? <p>Try a <span className=\"emphasis\">{winner.name.toLowerCase()} wine</span> such as a <br />{winner.subtypes.slice(0, -1).join(\", \") + \", or \" + winner.subtypes.slice(-1)}</p> : <p>No result yet.</p>}\n    </div>\n  );\n};\n\nexport default MenuFood;\n"]},"metadata":{},"sourceType":"module"}