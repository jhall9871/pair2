{"ast":null,"code":"var _jsxFileName = \"/Users/jameshall 1/Desktop/seir-526/pair/src/Components/MenuFood.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport foodTypes from \"../foodTypeData2\";\nimport wineTypeData from \"../wineTypeData\";\nimport WineRec from \"./WineRec\";\n\nconst MenuFood = ({\n  setWinner,\n  setPhotoContainerClass\n}) => {\n  const [pairingFactors, setPairingFactors] = useState([]);\n  const wineTypeArray = [\"boldred\", \"mediumred\", \"lightred\", \"rose\", \"richwhite\", \"lightwhite\", \"sparkling\", \"sweetwhite\", \"dessert\"]; //check if one of the factors is a prep method. if so, modify that pairing factor to include \"is\" for grammatical reasons later.\n\n  const preps = [\"Grilled or Barbecued\", \"Sauteed or Fried\", \"Smoked\", \"Roasted\", \"Steamed or Poached\"];\n\n  const handleSelect = event => {\n    //value always returns a string, like \"meat1\"\n    if (pairingFactors.length === 4) {\n      alert(\"That's the maximum number of factors.\");\n    } else {\n      let arr = event.target.value.split(\" \");\n      let type = arr[0];\n      let subType = arr[1];\n      console.log(\"type \" + type + \" subType \" + subType); //works\n\n      console.log(foodTypes[type][subType]); //works\n\n      setPairingFactors([...pairingFactors, foodTypes[type][subType]]);\n    }\n  }; //when Pair! is clicked, calculate the winning wine.\n\n\n  const handlePairClick = () => {\n    //create empty result array\n    let result = [0, 0, 0, 0, 0, 0, 0, 0, 0]; //loop through each pairing factor\n    // console.log(\"Here are the pairing factors:\");\n    // console.log(pairingFactors);\n\n    for (let i = 0; i < pairingFactors.length; i++) {\n      //loop through pairing factor's pairingarray\n      for (let j = 0; j < pairingFactors[i].pairingArray.length; j++) {\n        result[j] += pairingFactors[i].pairingArray[j];\n      }\n    }\n\n    let winningIndex = result.indexOf(Math.max(...result));\n    console.log(\"winningIndex = \" + winningIndex);\n    setWinner(wineTypeData[wineTypeArray[winningIndex]]); // console.log(\"winner = \");\n    // console.log(wineTypeData[wineTypeArray[winningIndex]]);\n    //also set an additional state which will be used to call the correct image later\n\n    setPhotoContainerClass(wineTypeArray[winningIndex]);\n  }; //change the layout depending on the number of factors\n\n\n  let displayStyle = \"\";\n\n  if (pairingFactors.length <= 1) {\n    displayStyle = \"factors-1\";\n  } else if (pairingFactors.length === 2) {\n    displayStyle = \"factors-2\";\n  } else if (pairingFactors.length === 3) {\n    displayStyle = \"factors-3\";\n  } else if (pairingFactors.length === 4) {\n    displayStyle = \"factors-4\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-food\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Choose 1-3 ingredients\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"and 0-1 prep method.\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    selected: true,\n    disabled: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Choose:\"), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Meat\",\n    id: \"meat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.meat).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `meat ${Object.keys(foodTypes.meat)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Dairy\",\n    id: \"dairy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.dairy).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `dairy ${Object.keys(foodTypes.dairy)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Vegetable\",\n    id: \"vegetable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.vegetable).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `vegetable ${Object.keys(foodTypes.vegetable)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Herb & Spice\",\n    id: \"herbandspice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.herbandspice).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `herbandspice ${Object.keys(foodTypes.herbandspice)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Starch\",\n    id: \"starch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.starch).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `starch ${Object.keys(foodTypes.starch)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Sweet\",\n    id: \"sweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.sweet).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `sweet ${Object.keys(foodTypes.sweet)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Preparation Method\",\n    id: \"preparation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.preparation).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `preparation ${Object.keys(foodTypes.preparation)[index]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, item.name))))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, \"Selected factors:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: displayStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, pairingFactors[0] ? pairingFactors.map((object, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"factor\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"factor-image-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, object.name), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, preps.indexOf(object.name) < 0 ? object.subtypes.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 23\n    }\n  }, item)) : \"\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"no-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"Please select something.\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/winerec\",\n    onClick: handlePairClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button pairbutton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, \"Pair!\"))));\n};\n\nexport default MenuFood;","map":{"version":3,"sources":["/Users/jameshall 1/Desktop/seir-526/pair/src/Components/MenuFood.js"],"names":["React","useState","Link","foodTypes","wineTypeData","WineRec","MenuFood","setWinner","setPhotoContainerClass","pairingFactors","setPairingFactors","wineTypeArray","preps","handleSelect","event","length","alert","arr","target","value","split","type","subType","console","log","handlePairClick","result","i","j","pairingArray","winningIndex","indexOf","Math","max","displayStyle","Object","values","meat","map","item","index","keys","name","dairy","vegetable","herbandspice","starch","sweet","preparation","object","subtypes"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport foodTypes from \"../foodTypeData2\";\nimport wineTypeData from \"../wineTypeData\";\nimport WineRec from \"./WineRec\";\n\nconst MenuFood = ({ setWinner, setPhotoContainerClass }) => {\n  const [pairingFactors, setPairingFactors] = useState([]);\n  const wineTypeArray = [\n    \"boldred\",\n    \"mediumred\",\n    \"lightred\",\n    \"rose\",\n    \"richwhite\",\n    \"lightwhite\",\n    \"sparkling\",\n    \"sweetwhite\",\n    \"dessert\",\n  ];\n\n  //check if one of the factors is a prep method. if so, modify that pairing factor to include \"is\" for grammatical reasons later.\n  const preps = [\n    \"Grilled or Barbecued\",\n    \"Sauteed or Fried\",\n    \"Smoked\",\n    \"Roasted\",\n    \"Steamed or Poached\",\n  ];\n  const handleSelect = (event) => {\n    //value always returns a string, like \"meat1\"\n    if (pairingFactors.length === 4) {\n      alert(\"That's the maximum number of factors.\");\n    } else {\n      let arr = event.target.value.split(\" \");\n      let type = arr[0];\n      let subType = arr[1];\n      console.log(\"type \" + type + \" subType \" + subType);//works\n      console.log(foodTypes[type][subType]);//works\n      setPairingFactors([...pairingFactors, foodTypes[type][subType]]);\n    }\n  };\n\n  //when Pair! is clicked, calculate the winning wine.\n  const handlePairClick = () => {\n    //create empty result array\n    let result = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    //loop through each pairing factor\n    // console.log(\"Here are the pairing factors:\");\n    // console.log(pairingFactors);\n    for (let i = 0; i < pairingFactors.length; i++) {\n      //loop through pairing factor's pairingarray\n      for (let j = 0; j < pairingFactors[i].pairingArray.length; j++) {\n        result[j] += pairingFactors[i].pairingArray[j];\n      }\n    }\n    let winningIndex = result.indexOf(Math.max(...result));\n    console.log(\"winningIndex = \" + winningIndex);\n    setWinner(wineTypeData[wineTypeArray[winningIndex]]);\n    // console.log(\"winner = \");\n    // console.log(wineTypeData[wineTypeArray[winningIndex]]);\n    //also set an additional state which will be used to call the correct image later\n    setPhotoContainerClass(wineTypeArray[winningIndex]);\n  };\n\n  //change the layout depending on the number of factors\n  let displayStyle = \"\";\n  if (pairingFactors.length <= 1) {\n    displayStyle = \"factors-1\";\n  } else if (pairingFactors.length === 2) {\n    displayStyle = \"factors-2\";\n  } else if (pairingFactors.length === 3) {\n    displayStyle = \"factors-3\";\n  } else if (pairingFactors.length === 4) {\n    displayStyle = \"factors-4\";\n  }\n\n  return (\n    <div className=\"menu-food\">\n      <h1>Choose 1-3 ingredients</h1>\n      <h1>and 0-1 prep method.</h1>\n      <form>\n        <select onChange={handleSelect}>\n          <option value=\"\" selected disabled hidden>\n            Choose:\n          </option>\n          <optgroup label=\"Meat\" id=\"meat\">\n            {Object.values(foodTypes.meat).map((item, index) => (\n              <option\n                key={index}\n                value={`meat ${Object.keys(foodTypes.meat)[index]}`}\n              >\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Dairy\" id=\"dairy\">\n            {Object.values(foodTypes.dairy).map((item, index) => (\n              <option\n                key={index}\n                value={`dairy ${Object.keys(foodTypes.dairy)[index]}`}\n              >\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Vegetable\" id=\"vegetable\">\n            {Object.values(foodTypes.vegetable).map((item, index) => (\n              <option\n                key={index}\n                value={`vegetable ${Object.keys(foodTypes.vegetable)[index]}`}\n              >\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Herb & Spice\" id=\"herbandspice\">\n            {Object.values(foodTypes.herbandspice).map((item, index) => (\n              <option\n                key={index}\n                value={`herbandspice ${\n                  Object.keys(foodTypes.herbandspice)[index]\n                }`}\n              >\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Starch\" id=\"starch\">\n            {Object.values(foodTypes.starch).map((item, index) => (\n              <option\n                key={index}\n                value={`starch ${Object.keys(foodTypes.starch)[index]}`}\n              >\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Sweet\" id=\"sweet\">\n            {Object.values(foodTypes.sweet).map((item, index) => (\n              <option\n                key={index}\n                value={`sweet ${Object.keys(foodTypes.sweet)[index]}`}\n              >\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Preparation Method\" id=\"preparation\">\n            {Object.values(foodTypes.preparation).map((item, index) => (\n              <option\n                key={index}\n                value={`preparation ${\n                  Object.keys(foodTypes.preparation)[index]\n                }`}\n              >\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n        </select>\n      </form>\n      <h2>Selected factors:</h2>\n      <div className={displayStyle}>\n        {pairingFactors[0] ? (\n          pairingFactors.map((object, index) => (\n            <div className=\"factor\" key={index}>\n              <div className=\"factor-image-container\"></div>\n              <h3>{object.name}</h3>\n              <ul>\n                {preps.indexOf(object.name) < 0\n                  ? object.subtypes.map((item, index) => (\n                      <li key={index}>{item}</li>\n                    ))\n                  : \"\"}\n              </ul>\n            </div>\n          ))\n        ) : (\n          <p className=\"no-selection\">Please select something.</p>\n        )}\n      </div>\n      <Link to=\"/winerec\" onClick={handlePairClick}>\n        <div className=\"button pairbutton\">\n          <h1>Pair!</h1>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default MenuFood;\n"]},"metadata":{},"sourceType":"module"}