{"ast":null,"code":"var _jsxFileName = \"/Users/jameshall 1/Desktop/seir-526/project-2-react/pair/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Welcome from \"./Components/Welcome\";\nimport ModeSelect from \"./Components/ModeSelect\";\nimport MenuWine from \"./Components/MenuWine\";\nimport MenuFood from \"./Components/MenuFood\";\nimport RecipeRec from \"./Components/RecipeRec\";\nimport wineTypes from \"./wineTypeData\";\nimport foodTypes from \"./foodTypeData\";\nimport \"./App.css\";\n\nfunction App() {\n  const [selectedWine, setSelectedWine] = useState(\"\"); //the wine the user selects\n\n  const [recipeRec, setRecipeRec] = useState(\"\"); //the recipe(s) we'll recommend\n\n  const handleWineSelect = event => {\n    setSelectedWine(event.target.value);\n  }; //listen for a change in selectedWine, make an api call and set recipeRec\n\n\n  useEffect(() => {\n    //if a wine has been selected,\n    if (selectedWine) {\n      //get wine pairing array\n      let pairingArray = wineTypes[selectedWine].pairingArray; //get array of food categories\n\n      let foodTypeArray = Object.keys(foodTypes); //create array of arrays of food subcategories\n\n      let foodSubtypeArray = [];\n      foodTypeArray.forEach(type => {\n        foodSubtypeArray.push(Object.keys(foodTypes[type]));\n      }); //flatten the array of arrays into one big array\n\n      let flatArray = foodSubtypeArray.flat(); // console.log(\"foodTypeArray = \" + foodTypeArray);\n      // console.log(flatArray);\n      //create an array with only foods with a value of \"2\" from pairing array (great pairs)\n      //for now, we're being more general, so \"pork\" rather than \"roast, tenderloin\" etc.\n\n      let masterArray = [];\n\n      for (let i = 0; i < flatArray.length; i++) {\n        if (pairingArray[i] === 2) {\n          masterArray.push(flatArray[i]);\n        }\n      } // console.log(masterArray)\n      // select two random indices from the master array\n\n\n      let num1 = Math.floor(Math.random() * masterArray.length);\n      let num2 = Math.floor(Math.random() * masterArray.length); // make sure they're not the same number!\n\n      while (num1 === num2) {\n        num2 = Math.floor(Math.random() * masterArray.length);\n      } // make our selections based on these indices\n\n\n      if (selectedWine) {\n        let selection1 = masterArray[num1];\n        let selection2 = masterArray[num2];\n        console.log(selection1, selection2);\n      }\n    }\n\n    const recipeUrl = `https://api.edamam.com/search?q=${selection1}%20AND%20${selection2}&app_id=c2605b0c&app_key=df18bda11a55f9351b07d5b7cff7c96b&from=0&to=3`;\n\n    const makeApiCall = async () => {\n      const response = await fetch(recipeUrl);\n      const json = await response.json();\n      setRecipeRec(json);\n    }; // makeApiCall(); //exceeded my limit! wait to re-establish this.\n\n  }, [selectedWine]); // console.log(wineTypes[selectedWine]);\n  // console.log(recipeRec);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Welcome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/modeselect\",\n    component: ModeSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/menuwine\",\n    render: routerProps => /*#__PURE__*/React.createElement(MenuWine, Object.assign({\n      handleWineSelect: handleWineSelect,\n      selectionInfo: wineTypes[selectedWine]\n    }, routerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/reciperec\",\n    render: routerProps => /*#__PURE__*/React.createElement(RecipeRec, Object.assign({\n      recipeRec: recipeRec\n    }, routerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/menufood\",\n    component: MenuFood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jameshall 1/Desktop/seir-526/project-2-react/pair/src/App.js"],"names":["React","useState","useEffect","Route","Switch","Welcome","ModeSelect","MenuWine","MenuFood","RecipeRec","wineTypes","foodTypes","App","selectedWine","setSelectedWine","recipeRec","setRecipeRec","handleWineSelect","event","target","value","pairingArray","foodTypeArray","Object","keys","foodSubtypeArray","forEach","type","push","flatArray","flat","masterArray","i","length","num1","Math","floor","random","num2","selection1","selection2","console","log","recipeUrl","makeApiCall","response","fetch","json","routerProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Welcome from \"./Components/Welcome\";\nimport ModeSelect from \"./Components/ModeSelect\";\nimport MenuWine from \"./Components/MenuWine\";\nimport MenuFood from \"./Components/MenuFood\";\nimport RecipeRec from \"./Components/RecipeRec\";\nimport wineTypes from \"./wineTypeData\";\nimport foodTypes from \"./foodTypeData\";\nimport \"./App.css\";\n\nfunction App() {\n  const [selectedWine, setSelectedWine] = useState(\"\"); //the wine the user selects\n  const [recipeRec, setRecipeRec] = useState(\"\"); //the recipe(s) we'll recommend\n\n  const handleWineSelect = (event) => {\n    setSelectedWine(event.target.value);\n  };\n\n  //listen for a change in selectedWine, make an api call and set recipeRec\n  useEffect(() => {\n    //if a wine has been selected,\n    if (selectedWine) {\n      //get wine pairing array\n      let pairingArray = wineTypes[selectedWine].pairingArray;\n      //get array of food categories\n      let foodTypeArray = Object.keys(foodTypes);\n      //create array of arrays of food subcategories\n      let foodSubtypeArray = [];\n      foodTypeArray.forEach(type => {\n        foodSubtypeArray.push(Object.keys(foodTypes[type]))\n      })\n      //flatten the array of arrays into one big array\n      let flatArray = foodSubtypeArray.flat();\n      // console.log(\"foodTypeArray = \" + foodTypeArray);\n      // console.log(flatArray);\n      //create an array with only foods with a value of \"2\" from pairing array (great pairs)\n      //for now, we're being more general, so \"pork\" rather than \"roast, tenderloin\" etc.\n      let masterArray = [];\n      for (let i = 0; i < flatArray.length; i++) {\n        if (pairingArray[i] === 2) {\n          masterArray.push(flatArray[i])\n        }\n      }\n      // console.log(masterArray)\n      // select two random indices from the master array\n      let num1 = Math.floor(Math.random() * masterArray.length);\n      let num2 = Math.floor(Math.random() * masterArray.length);\n      // make sure they're not the same number!\n      while (num1 === num2) {\n        num2 = Math.floor(Math.random() * masterArray.length);\n      }\n      // make our selections based on these indices\n      if (selectedWine) {\n        let selection1 = masterArray[num1];\n        let selection2 = masterArray[num2];\n        console.log(selection1, selection2)\n      }\n    }\n    const recipeUrl =\n      `https://api.edamam.com/search?q=${selection1}%20AND%20${selection2}&app_id=c2605b0c&app_key=df18bda11a55f9351b07d5b7cff7c96b&from=0&to=3`;\n    const makeApiCall = async () => {\n      const response = await fetch(recipeUrl);\n      const json = await response.json();\n      setRecipeRec(json);\n    };\n    // makeApiCall(); //exceeded my limit! wait to re-establish this.\n  }, [selectedWine]);\n\n  // console.log(wineTypes[selectedWine]);\n  // console.log(recipeRec);\n\n  return (\n    <div className=\"App\">\n      <nav></nav>\n      <div className=\"main\">\n        <Switch>\n          <Route exact path=\"/\" component={Welcome} />\n          <Route path=\"/modeselect\" component={ModeSelect} />\n          <Route\n            path=\"/menuwine\"\n            render={(routerProps) => (\n              <MenuWine\n                handleWineSelect={handleWineSelect}\n                selectionInfo={wineTypes[selectedWine]}\n                {...routerProps}\n              />\n            )}\n          />\n          <Route\n            path=\"/reciperec\"\n            render={(routerProps) => (\n              <RecipeRec recipeRec={recipeRec} {...routerProps} />\n            )}\n          />\n          <Route path=\"/menufood\" component={MenuFood} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}