{"ast":null,"code":"var _jsxFileName = \"/Users/jameshall/Desktop/projects/pair2/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Welcome from \"./Components/Welcome\";\nimport ModeSelect from \"./Components/ModeSelect\";\nimport MenuWine from \"./Components/MenuWine\";\nimport MenuFood from \"./Components/MenuFood\";\nimport RecipeRec from \"./Components/RecipeRec\";\nimport WineRec from \"./Components/WineRec\";\nimport wineTypes from \"./wineTypeData\";\nimport foodTypes from \"./foodTypeData\";\nimport \"./App.css\";\n\nfunction App() {\n  const [selectedWine, setSelectedWine] = useState(\"\"); //the wine the user selects\n\n  const [selectionInfo, setSelectionInfo] = useState({}); //the whole object corresponding to that wine\n\n  const [recipeUrl, setRecipeUrl] = useState(\"\");\n  const [recipeRec, setRecipeRec] = useState(\"\"); //the recipe(s) we'll recommend\n\n  const [pairingFactor1, setPairingFactor1] = useState(\"\");\n  const [pairingFactor2, setPairingFactor2] = useState(\"\");\n  const [winner, setWinner] = useState({});\n  const [photoContainerClass, setPhotoContainerClass] = useState(\"\");\n  const API_KEY = process.env.REACT_APP_EDAMAM_API_KEY; //When the user selects a wine (in MenuWine), update SelectedWine (its name, a string) and SelectionInfo (an object with all its info).\n\n  const handleWineSelect = event => {\n    setSelectedWine(event.target.dataset.id);\n    setSelectionInfo(wineTypes[event.target.dataset.id]);\n  }; //listen for a change in selectedWine (in MenuWine), set the search url.\n\n\n  useEffect(() => {\n    //if a wine has been selected,\n    if (selectedWine) {\n      //get wine pairing array\n      let pairingArray = wineTypes[selectedWine].pairingArray; //get array of food categories\n\n      let foodTypeArray = Object.keys(foodTypes); //create array of arrays of food subcategories\n\n      let foodSubtypeArray = [];\n      foodTypeArray.forEach(type => {\n        foodSubtypeArray.push(Object.keys(foodTypes[type]));\n      }); //flatten the array of arrays into one big array\n\n      let flatArray = foodSubtypeArray.flat(); //create an array with only foods with a value of \"2\" from pairing array (great pairs). for now, we're being more general, so \"pork\" rather than \"roast, tenderloin\" etc.\n\n      let masterArray = []; //sparkling and rose wines only have one 2 in their array, so in their case, we'll allow 1s.\n\n      if (selectedWine === \"sparkling\" || selectedWine === \"rose\") {\n        for (let i = 0; i < flatArray.length; i++) {\n          if (pairingArray[i] >= 1) {\n            masterArray.push(flatArray[i]);\n          }\n        } //otherwise it's gotta be 2s.\n\n      } else {\n        for (let i = 0; i < flatArray.length; i++) {\n          if (pairingArray[i] === 2) {\n            masterArray.push(flatArray[i]);\n          }\n        }\n      } // select two random indices from the master array. One from each half of the array. This way you don't get two kinds of meat, or two prep methods.\n\n\n      let num1 = Math.floor(Math.random() * (masterArray.length / 2));\n      let num2 = Math.floor(Math.random() * (masterArray.length / 2) + masterArray.length / 2); // make our selections based on these indices\n\n      let localPairFactor1 = masterArray[num1];\n      let localPairFactor2 = masterArray[num2]; //look out for spaces! Can't have those in a url. Change them to \"%20\"\n\n      let localPairFactor1NoSpace = localPairFactor1;\n      let localPairFactor2NoSpace = localPairFactor2;\n\n      if (localPairFactor1NoSpace.includes(\" \")) {\n        let index = localPairFactor1NoSpace.indexOf(\" \");\n        localPairFactor1NoSpace = localPairFactor1NoSpace.slice(0, index) + \"%20\" + localPairFactor1NoSpace.slice(index + 1);\n      }\n\n      if (localPairFactor2NoSpace.includes(\" \")) {\n        let index = localPairFactor2NoSpace.indexOf(\" \");\n        localPairFactor2NoSpace = localPairFactor2NoSpace.slice(0, index) + \"%20\" + localPairFactor2NoSpace.slice(index + 1);\n      }\n\n      setRecipeUrl(`https://api.edamam.com/search?q=${localPairFactor1NoSpace}%20AND%20${localPairFactor2NoSpace}&app_id=d9740b8f&app_key=${API_KEY}`); //set pairing factor with the vanilla (including spaces) names.\n\n      setPairingFactor1(localPairFactor1);\n      setPairingFactor2(localPairFactor2);\n    }\n  }, [selectedWine]); //When the user clicks \"Show mea a recipe!\" (in MenuWine),\n\n  const handleShowMeClick = () => {\n    //actually make the api call\n    const makeApiCall = async () => {\n      const response = await fetch(recipeUrl);\n      const json = await response.json();\n      setRecipeRec(json);\n      console.log(recipeRec);\n    };\n\n    makeApiCall(); //no more than 5x per minute!\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Welcome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/modeselect\",\n    component: ModeSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/menuwine\",\n    render: routerProps => /*#__PURE__*/React.createElement(MenuWine, Object.assign({\n      handleWineSelect: handleWineSelect,\n      handleShowMeClick: handleShowMeClick,\n      selectionInfo: selectionInfo\n    }, routerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/reciperec\",\n    render: routerProps => /*#__PURE__*/React.createElement(RecipeRec, Object.assign({\n      recipeRec: recipeRec,\n      factor1: pairingFactor1,\n      factor2: pairingFactor2,\n      selectionInfo: selectionInfo\n    }, routerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/winerec\",\n    render: routerProps => /*#__PURE__*/React.createElement(WineRec, Object.assign({\n      winner: winner,\n      photoContainerClass: photoContainerClass\n    }, routerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/menufood\",\n    render: routerProps => /*#__PURE__*/React.createElement(MenuFood, Object.assign({\n      setWinner: setWinner,\n      setPhotoContainerClass: setPhotoContainerClass\n    }, routerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jameshall/Desktop/projects/pair2/src/App.js"],"names":["React","useState","useEffect","Route","Switch","Welcome","ModeSelect","MenuWine","MenuFood","RecipeRec","WineRec","wineTypes","foodTypes","App","selectedWine","setSelectedWine","selectionInfo","setSelectionInfo","recipeUrl","setRecipeUrl","recipeRec","setRecipeRec","pairingFactor1","setPairingFactor1","pairingFactor2","setPairingFactor2","winner","setWinner","photoContainerClass","setPhotoContainerClass","API_KEY","process","env","REACT_APP_EDAMAM_API_KEY","handleWineSelect","event","target","dataset","id","pairingArray","foodTypeArray","Object","keys","foodSubtypeArray","forEach","type","push","flatArray","flat","masterArray","i","length","num1","Math","floor","random","num2","localPairFactor1","localPairFactor2","localPairFactor1NoSpace","localPairFactor2NoSpace","includes","index","indexOf","slice","handleShowMeClick","makeApiCall","response","fetch","json","console","log","routerProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Welcome from \"./Components/Welcome\";\nimport ModeSelect from \"./Components/ModeSelect\";\nimport MenuWine from \"./Components/MenuWine\";\nimport MenuFood from \"./Components/MenuFood\";\nimport RecipeRec from \"./Components/RecipeRec\";\nimport WineRec from \"./Components/WineRec\";\nimport wineTypes from \"./wineTypeData\";\nimport foodTypes from \"./foodTypeData\";\nimport \"./App.css\";\n\nfunction App() {\n  const [selectedWine, setSelectedWine] = useState(\"\"); //the wine the user selects\n  const [selectionInfo, setSelectionInfo] = useState({}); //the whole object corresponding to that wine\n  const [recipeUrl, setRecipeUrl] = useState(\"\");\n  const [recipeRec, setRecipeRec] = useState(\"\"); //the recipe(s) we'll recommend\n  const [pairingFactor1, setPairingFactor1] = useState(\"\");\n  const [pairingFactor2, setPairingFactor2] = useState(\"\");\n  const [winner, setWinner] = useState({});\n  const [photoContainerClass, setPhotoContainerClass] = useState(\"\");\n  const API_KEY = process.env.REACT_APP_EDAMAM_API_KEY;\n\n  //When the user selects a wine (in MenuWine), update SelectedWine (its name, a string) and SelectionInfo (an object with all its info).\n  const handleWineSelect = (event) => {\n    setSelectedWine(event.target.dataset.id);\n    setSelectionInfo(wineTypes[event.target.dataset.id]);\n  };\n\n  //listen for a change in selectedWine (in MenuWine), set the search url.\n  useEffect(() => {\n    //if a wine has been selected,\n    if (selectedWine) {\n      //get wine pairing array\n      let pairingArray = wineTypes[selectedWine].pairingArray;\n      //get array of food categories\n      let foodTypeArray = Object.keys(foodTypes);\n      //create array of arrays of food subcategories\n      let foodSubtypeArray = [];\n      foodTypeArray.forEach((type) => {\n        foodSubtypeArray.push(Object.keys(foodTypes[type]));\n      });\n      //flatten the array of arrays into one big array\n      let flatArray = foodSubtypeArray.flat();\n      //create an array with only foods with a value of \"2\" from pairing array (great pairs). for now, we're being more general, so \"pork\" rather than \"roast, tenderloin\" etc.\n      let masterArray = [];\n      //sparkling and rose wines only have one 2 in their array, so in their case, we'll allow 1s.\n      if (selectedWine === \"sparkling\" || selectedWine === \"rose\") {\n        for (let i = 0; i < flatArray.length; i++) {\n          if (pairingArray[i] >= 1) {\n            masterArray.push(flatArray[i]);\n          }\n        }\n        //otherwise it's gotta be 2s.\n      } else {\n        for (let i = 0; i < flatArray.length; i++) {\n          if (pairingArray[i] === 2) {\n            masterArray.push(flatArray[i]);\n          }\n        }\n      }\n      // select two random indices from the master array. One from each half of the array. This way you don't get two kinds of meat, or two prep methods.\n      let num1 = Math.floor(Math.random() * (masterArray.length / 2));\n      let num2 = Math.floor(\n        Math.random() * (masterArray.length / 2) + masterArray.length / 2\n      );\n\n      // make our selections based on these indices\n      let localPairFactor1 = masterArray[num1];\n      let localPairFactor2 = masterArray[num2];\n\n      //look out for spaces! Can't have those in a url. Change them to \"%20\"\n      let localPairFactor1NoSpace = localPairFactor1;\n      let localPairFactor2NoSpace = localPairFactor2;\n\n      if (localPairFactor1NoSpace.includes(\" \")) {\n        let index = localPairFactor1NoSpace.indexOf(\" \");\n        localPairFactor1NoSpace =\n          localPairFactor1NoSpace.slice(0, index) +\n          \"%20\" +\n          localPairFactor1NoSpace.slice(index + 1);\n      }\n\n      if (localPairFactor2NoSpace.includes(\" \")) {\n        let index = localPairFactor2NoSpace.indexOf(\" \");\n        localPairFactor2NoSpace =\n          localPairFactor2NoSpace.slice(0, index) +\n          \"%20\" +\n          localPairFactor2NoSpace.slice(index + 1);\n      }\n\n      setRecipeUrl(\n        `https://api.edamam.com/search?q=${localPairFactor1NoSpace}%20AND%20${localPairFactor2NoSpace}&app_id=d9740b8f&app_key=${API_KEY}`\n      );\n\n      //set pairing factor with the vanilla (including spaces) names.\n      setPairingFactor1(localPairFactor1);\n      setPairingFactor2(localPairFactor2);\n  \n    }\n  }, [selectedWine]);\n\n  //When the user clicks \"Show mea a recipe!\" (in MenuWine),\n  const handleShowMeClick = () => {\n    //actually make the api call\n    const makeApiCall = async () => {\n      const response = await fetch(recipeUrl);\n      const json = await response.json();\n      setRecipeRec(json);\n      console.log(recipeRec);\n    };\n    makeApiCall(); //no more than 5x per minute!\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <Switch>\n          <Route exact path=\"/\" component={Welcome} />\n          <Route path=\"/modeselect\" component={ModeSelect} />\n          <Route\n            path=\"/menuwine\"\n            render={(routerProps) => (\n              <MenuWine\n                handleWineSelect={handleWineSelect}\n                handleShowMeClick={handleShowMeClick}\n                selectionInfo={selectionInfo}\n                {...routerProps}\n              />\n            )}\n          />\n          <Route\n            path=\"/reciperec\"\n            render={(routerProps) => (\n              <RecipeRec\n                recipeRec={recipeRec}\n                factor1={pairingFactor1}\n                factor2={pairingFactor2}\n                selectionInfo={selectionInfo}\n                {...routerProps}\n              />\n            )}\n          />\n          <Route\n            path=\"/winerec\"\n            render={(routerProps) => (\n              <WineRec winner={winner} photoContainerClass={photoContainerClass} {...routerProps} />\n            )}\n          />\n          <Route\n            path=\"/menufood\"\n            render={(routerProps) => (\n              <MenuFood\n                setWinner={setWinner}\n                setPhotoContainerClass={setPhotoContainerClass}\n                {...routerProps} />\n            )}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}