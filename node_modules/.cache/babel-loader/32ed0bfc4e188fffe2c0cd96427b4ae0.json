{"ast":null,"code":"var _jsxFileName = \"/Users/jameshall 1/Desktop/seir-526/project-2-react/pair/src/Components/MenuFood.js\";\nimport React, { useState } from \"react\";\nimport foodTypes from \"../foodTypeData2\";\n\nconst MenuFood = () => {\n  const [pairingFactors, setPairingFactors] = useState([]);\n\n  const handleSelect = event => {\n    //value always returns a string, like \"meat1\"\n    let str = event.target.value;\n    let index = parseInt(str.slice(-1));\n    let type = str.slice(0, -1);\n    console.log(\"str = \" + str + \" index = \" + index + \" type = \" + type);\n    console.log(foodTypes[type]);\n    setPairingFactors([...pairingFactors, foodTypes[type][index]]);\n  }; // {\n  //   Object.values(foodTypes.meat).map((item, index) => console.log(item));\n  // }\n\n\n  console.log(pairingFactors);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-food\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Choose an ingredient / prep method.\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Meat\",\n    id: \"meat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.meat).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: `meat${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Dairy\",\n    id: \"dairy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.dairy).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Vegetable\",\n    id: \"vegetable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.vegetable).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Herb & Spice\",\n    id: \"herbandspice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.herbandspice).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Starch\",\n    id: \"starch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.starch).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Sweet\",\n    id: \"sweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.sweet).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(\"optgroup\", {\n    label: \"Preparation Method\",\n    id: \"preparation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, Object.values(foodTypes.preparation).map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, item.name))))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Selected factors:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, pairingFactors[0] ? pairingFactors.map((object, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 66\n    }\n  }, object.name)) : \"Please select something.\"));\n};\n\nexport default MenuFood;","map":{"version":3,"sources":["/Users/jameshall 1/Desktop/seir-526/project-2-react/pair/src/Components/MenuFood.js"],"names":["React","useState","foodTypes","MenuFood","pairingFactors","setPairingFactors","handleSelect","event","str","target","value","index","parseInt","slice","type","console","log","Object","values","meat","map","item","name","dairy","vegetable","herbandspice","starch","sweet","preparation","object"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport foodTypes from \"../foodTypeData2\";\n\nconst MenuFood = () => {\n  const [pairingFactors, setPairingFactors] = useState([]);\n\n  const handleSelect = (event) => {\n    //value always returns a string, like \"meat1\"\n    let str = event.target.value;\n    let index = parseInt(str.slice(-1));\n    let type = str.slice(0, -1);\n    console.log(\"str = \" + str + \" index = \" + index + \" type = \" + type);\n    console.log(foodTypes[type]);\n    setPairingFactors([...pairingFactors, foodTypes[type][index]]);\n  };\n\n  // {\n  //   Object.values(foodTypes.meat).map((item, index) => console.log(item));\n  // }\n\nconsole.log(pairingFactors)\n\n  return (\n    <div className=\"menu-food\">\n      <h3>Choose an ingredient / prep method.</h3>\n      <form>\n        <select onChange={handleSelect}>\n          <optgroup label=\"Meat\" id=\"meat\">\n            {Object.values(foodTypes.meat).map((item, index) => (\n              <option key={index} value={`meat${index}`}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Dairy\" id=\"dairy\">\n            {Object.values(foodTypes.dairy).map((item, index) => (\n              <option key={index} value={item}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Vegetable\" id=\"vegetable\">\n            {Object.values(foodTypes.vegetable).map((item, index) => (\n              <option key={index} value={item}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Herb & Spice\" id=\"herbandspice\">\n            {Object.values(foodTypes.herbandspice).map((item, index) => (\n              <option key={index} value={item}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Starch\" id=\"starch\">\n            {Object.values(foodTypes.starch).map((item, index) => (\n              <option key={index} value={item}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Sweet\" id=\"sweet\">\n            {Object.values(foodTypes.sweet).map((item, index) => (\n              <option key={index} value={item}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n          <optgroup label=\"Preparation Method\" id=\"preparation\">\n            {Object.values(foodTypes.preparation).map((item, index) => (\n              <option key={index} value={item}>\n                {item.name}\n              </option>\n            ))}\n          </optgroup>\n        </select>\n      </form>\n      <h3>Selected factors:</h3>\n      <ul>\n      {pairingFactors[0] ? pairingFactors.map((object, index) => <li key={index}>{object.name}</li>) : \"Please select something.\"}\n      </ul>\n    </div>\n  );\n};\n\nexport default MenuFood;\n"]},"metadata":{},"sourceType":"module"}