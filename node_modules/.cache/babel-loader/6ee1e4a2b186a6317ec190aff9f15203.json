{"ast":null,"code":"import React from\"react\";import{Link}from\"react-router-dom\";var RecipeRec=function RecipeRec(_ref){var recipeRec=_ref.recipeRec,factor1=_ref.factor1,factor2=_ref.factor2,selectionInfo=_ref.selectionInfo;var factor1withGrammar=\"\";var factor2withGrammar=\"\";if(recipeRec.hits){//check if one of the factors is a prep method. if so, modify that pairing factor to include \"is\" for grammatical reasons later.\nvar preps=[\"grilled\",\"barbecued\",\"sauteed\",\"fried\",\"smoked\",\"roasted\",\"steamed\"];//first case: if they're both prep methods (bad)\nif(preps.includes(factor1)&&preps.includes(factor2)){alert(\"you can't choose 2 prep methods.\");//second case: one is a prep method, the other is an ingredient\n}else if(!preps.includes(factor1)&&preps.includes(factor2)){factor1withGrammar=\"has \"+factor1;factor2withGrammar=\"is \"+factor2;//third case: same as second, but reversed.\n}else if(!preps.includes(factor2)&&preps.includes(factor1)){factor2withGrammar=\"has \"+factor2;factor1withGrammar=\"is \"+factor1;//fourth case: both are ingredients.\n}else{factor1withGrammar=\"has \"+factor1;}return/*#__PURE__*/React.createElement(\"div\",{className:\"recipe-rec\"},/*#__PURE__*/React.createElement(\"div\",{className:\"recipe-image-container\"},/*#__PURE__*/React.createElement(\"img\",{src:recipeRec.hits[0].recipe.image,alt:\"first recipe\",key:\"0\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"recipe-info-container\"},/*#__PURE__*/React.createElement(\"h3\",null,recipeRec.hits[0].recipe.label),/*#__PURE__*/React.createElement(\"p\",null,\"This recipe \",factor1withGrammar,\" and \",factor2withGrammar,\", which pair well with your \",selectionInfo.name.toLowerCase()),/*#__PURE__*/React.createElement(Link,{to:\"/\"},\"Back to Home.\")));}else{return/*#__PURE__*/React.createElement(\"div\",{className:\"recipe-rec\"},/*#__PURE__*/React.createElement(\"p\",null,\"Nothing yet.\"),/*#__PURE__*/React.createElement(Link,{to:\"/\"},\"Back to Home.\"));}};export default RecipeRec;","map":{"version":3,"sources":["/Users/jameshall 1/Desktop/seir-526/pair/src/Components/RecipeRec.js"],"names":["React","Link","RecipeRec","recipeRec","factor1","factor2","selectionInfo","factor1withGrammar","factor2withGrammar","hits","preps","includes","alert","recipe","image","label","name","toLowerCase"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAoD,IAAjDC,CAAAA,SAAiD,MAAjDA,SAAiD,CAAtCC,OAAsC,MAAtCA,OAAsC,CAA7BC,OAA6B,MAA7BA,OAA6B,CAApBC,aAAoB,MAApBA,aAAoB,CACpE,GAAIC,CAAAA,kBAAkB,CAAG,EAAzB,CACA,GAAIC,CAAAA,kBAAkB,CAAG,EAAzB,CACA,GAAIL,SAAS,CAACM,IAAd,CAAoB,CAClB;AACA,GAAMC,CAAAA,KAAK,CAAG,CACZ,SADY,CAEZ,WAFY,CAGZ,SAHY,CAIZ,OAJY,CAKZ,QALY,CAMZ,SANY,CAOZ,SAPY,CAAd,CASA;AACA,GAAIA,KAAK,CAACC,QAAN,CAAeP,OAAf,GAA2BM,KAAK,CAACC,QAAN,CAAeN,OAAf,CAA/B,CAAwD,CACtDO,KAAK,CAAC,kCAAD,CAAL,CACA;AACD,CAHD,IAGO,IAAI,CAACF,KAAK,CAACC,QAAN,CAAeP,OAAf,CAAD,EAA4BM,KAAK,CAACC,QAAN,CAAeN,OAAf,CAAhC,CAAyD,CAC9DE,kBAAkB,CAAG,OAASH,OAA9B,CACAI,kBAAkB,CAAG,MAAQH,OAA7B,CACA;AACD,CAJM,IAIA,IAAI,CAACK,KAAK,CAACC,QAAN,CAAeN,OAAf,CAAD,EAA4BK,KAAK,CAACC,QAAN,CAAeP,OAAf,CAAhC,CAAyD,CAC9DI,kBAAkB,CAAG,OAASH,OAA9B,CACAE,kBAAkB,CAAG,MAAQH,OAA7B,CACA;AACD,CAJM,IAIA,CACLG,kBAAkB,CAAG,OAASH,OAA9B,CACD,CAED,mBACE,2BAAK,SAAS,CAAC,YAAf,eACE,2BAAK,SAAS,CAAC,wBAAf,eACE,2BACE,GAAG,CAAED,SAAS,CAACM,IAAV,CAAe,CAAf,EAAkBI,MAAlB,CAAyBC,KADhC,CAEE,GAAG,CAAC,cAFN,CAGE,GAAG,CAAC,GAHN,EADF,CADF,cAQE,2BAAK,SAAS,CAAC,uBAAf,eACE,8BAAKX,SAAS,CAACM,IAAV,CAAe,CAAf,EAAkBI,MAAlB,CAAyBE,KAA9B,CADF,cAEE,4CACeR,kBADf,SACwCC,kBADxC,gCAEuBF,aAAa,CAACU,IAAd,CAAmBC,WAAnB,EAFvB,CAFF,cAME,oBAAC,IAAD,EAAM,EAAE,CAAC,GAAT,kBANF,CARF,CADF,CAmBD,CA9CD,IA8CO,CACL,mBACE,2BAAK,SAAS,CAAC,YAAf,eACE,4CADF,cAEE,oBAAC,IAAD,EAAM,EAAE,CAAC,GAAT,kBAFF,CADF,CAMD,CACF,CAzDD,CA2DA,cAAef,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst RecipeRec = ({ recipeRec, factor1, factor2, selectionInfo }) => {\n  let factor1withGrammar = \"\";\n  let factor2withGrammar = \"\";\n  if (recipeRec.hits) {\n    //check if one of the factors is a prep method. if so, modify that pairing factor to include \"is\" for grammatical reasons later.\n    const preps = [\n      \"grilled\",\n      \"barbecued\",\n      \"sauteed\",\n      \"fried\",\n      \"smoked\",\n      \"roasted\",\n      \"steamed\",\n    ];\n    //first case: if they're both prep methods (bad)\n    if (preps.includes(factor1) && preps.includes(factor2)) {\n      alert(\"you can't choose 2 prep methods.\");\n      //second case: one is a prep method, the other is an ingredient\n    } else if (!preps.includes(factor1) && preps.includes(factor2)) {\n      factor1withGrammar = \"has \" + factor1;\n      factor2withGrammar = \"is \" + factor2;\n      //third case: same as second, but reversed.\n    } else if (!preps.includes(factor2) && preps.includes(factor1)) {\n      factor2withGrammar = \"has \" + factor2;\n      factor1withGrammar = \"is \" + factor1;\n      //fourth case: both are ingredients.\n    } else {\n      factor1withGrammar = \"has \" + factor1;\n    }\n\n    return (\n      <div className=\"recipe-rec\">\n        <div className=\"recipe-image-container\">\n          <img\n            src={recipeRec.hits[0].recipe.image}\n            alt=\"first recipe\"\n            key=\"0\"\n          />\n        </div>\n        <div className=\"recipe-info-container\">\n          <h3>{recipeRec.hits[0].recipe.label}</h3>\n          <p>\n            This recipe {factor1withGrammar} and {factor2withGrammar}, which\n            pair well with your {selectionInfo.name.toLowerCase()}\n          </p>\n          <Link to=\"/\">Back to Home.</Link>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"recipe-rec\">\n        <p>Nothing yet.</p>\n        <Link to=\"/\">Back to Home.</Link>\n      </div>\n    );\n  }\n};\n\nexport default RecipeRec;\n"]},"metadata":{},"sourceType":"module"}